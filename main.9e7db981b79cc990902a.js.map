{"version":3,"sources":["webpack:///./serviceAPI.js","webpack:///./index.js"],"names":["bthNextRenderRef","document","querySelector","page","query","memory","API_KEY","getImages","callback","this","FETCH_URL","fetch","then","j","json","data","hits","length","classList","remove","PNotify","title","text","hide","delay","maxOpen","catch","e","console","log","string","resetPage","galleryRef","searchFormRef","onDataCome","nextToHTML","map","el","webformatURL","likes","views","comments","downloads","largeImageURL","join","insertAdjacentHTML","addEventListener","event","preventDefault","input","elements","value","service","searchQuery","innerHTML","window","scrollTo","top","pageYOffset","innerHeight","left","behavior","target","nodeName","currentURL","dataset","action","basicLightbox","closable","show"],"mappings":"iPAEMA,EAAmBC,SAASC,cAAc,mBACjC,GACbC,KAAM,EACNC,MAAO,GACPC,OAAQ,GACRC,QAAS,qCACTC,UALa,SAKHC,GACJC,KAAKJ,OAAOI,KAAKL,OACnBK,KAAKJ,OAAOI,KAAKL,OAASK,KAAKJ,OAAOI,KAAKL,OAAS,EAEpDK,KAAKJ,OAAOI,KAAKL,OAAS,EAE5BK,KAAKN,KAAOM,KAAKJ,OAAOI,KAAKL,OAC7B,IAAMM,EAAY,mFAAmFD,KAAKH,QAA3F,SAA2GG,KAAKN,KAAhH,MAA0HM,KAAKL,MAE9IO,MAAMD,GAAWE,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UAAQF,MAAK,SAAAG,GAChB,IAArBA,EAAKC,KAAKC,QAUbT,EAASO,EAAKC,MAGdhB,EAAiBkB,UAAUC,OAAO,UAZhCC,QAAc,CACZC,MAAO,QACPC,KAAM,iCACNC,MAAM,EACNC,MAAO,KACPC,QAAS,OAQZC,OAAM,SAAAC,GAAC,OAAIC,QAAQC,IAAIF,OAE5B,kBACE,OAAOlB,KAAKL,OAEd,gBAAgB0B,GACdrB,KAAKL,MAAQ0B,GAEfC,UArCa,WAsCXtB,KAAKJ,OAAOI,KAAKL,OAAS,ICjCxB4B,EAAa/B,SAASC,cAAc,YACpC+B,EAAgBhC,SAASC,cAAc,gBACvCF,EAAmBC,SAASC,cAAc,mBA4ChD,SAASgC,EAAWnB,GAClB,IAAMoB,EAAapB,EAChBqB,KAAI,SAAAC,GAAM,IAEPC,EAMED,EANFC,aACAC,EAKEF,EALFE,MACAC,EAIEH,EAJFG,MACAC,EAGEJ,EAHFI,SACAC,EAEEL,EAFFK,UAKF,uDAEQJ,EAFR,kBAHID,EADFM,cAIF,uHAMEJ,EANF,iGAUEC,EAVF,8FAcEC,EAdF,qGAkBEC,EAlBF,yCAwBDE,KAAK,KACRZ,EAAWa,mBAAmB,YAAaV,GA5E7CF,EAAca,iBAAiB,UAwB/B,SAAsBC,GACpBA,EAAMC,iBACN,IAAMC,EAAQhB,EAAciB,SAAS9C,MACrC,GAAoB,KAAhB6C,EAAME,MACR,OAEFC,EAAQC,YAAcJ,EAAME,MAC5BnB,EAAWsB,UAAY,GACvBF,EAAQrB,YACRqB,EAAQ7C,UAAU2B,GAClBe,EAAME,MAAQ,MAjChBnD,EAAiB8C,iBAAiB,SAclC,WACEM,EAAQ7C,UAAU2B,GAClBqB,OAAOC,SAAS,CACdC,IAAKF,OAAOG,YAAcH,OAAOI,YACjCC,KAAM,EACNC,SAAU,cAlBd7B,EAAWc,iBAAiB,SAE5B,SAAiBC,GACf,GAA8B,QAA1BA,EAAMe,OAAOC,SAAoB,CACnC,IAAMC,EAAajB,EAAMe,OAAOG,QAAQC,OACxCC,SAAA,mBACYH,EADZ,QAED,CACGI,UAAU,IACTC,Y","file":"main.9e7db981b79cc990902a.js","sourcesContent":["import * as PNotify from '@pnotify/core';\r\n\r\nconst bthNextRenderRef = document.querySelector('.bth__loda-more');\r\nexport default {\r\n  page: 1,\r\n  query: '',\r\n  memory: {},\r\n  API_KEY: '17911503-2ed926ce3a8ce366c6cd807d9',\r\n  getImages(callback) {\r\n    if (this.memory[this.query]) {\r\n      this.memory[this.query] = this.memory[this.query] + 1;\r\n    } else {\r\n      this.memory[this.query] = 1;\r\n    }\r\n    this.page = this.memory[this.query];\r\n    const FETCH_URL = `https://pixabay.com/api/?image_type=photo&orientation=horizontal&per_page=3&key=${this.API_KEY}&page=${this.page}&q=${this.query}`;\r\n\r\n    fetch(FETCH_URL).then(j => j.json()).then(data => {\r\n      if(data.hits.length === 0){\r\n        PNotify.error({\r\n          title: 'Error',\r\n          text: 'Enter the correct search words',\r\n          hide: true,\r\n          delay: 1500,\r\n          maxOpen: 1,\r\n        });\r\n        return;\r\n      }\r\n      callback(data.hits)\r\n   \r\n\r\n      bthNextRenderRef.classList.remove('hiden')\r\n    }).catch(e => console.log(e));\r\n  },\r\n  get searchQuery() {\r\n    return this.query;\r\n  },\r\n  set searchQuery(string) {\r\n    this.query = string;\r\n  },\r\n  resetPage() {\r\n    this.memory[this.query] = 1;\r\n  }\r\n\r\n}\r\n","import '@pnotify/core/dist/PNotify.css';\nimport '@pnotify/core/dist/BrightTheme.css';\nimport * as basicLightbox from 'basiclightbox';\nimport 'basiclightbox/dist/basicLightbox.min.css'\nimport as from './observer'\nimport './styles.css';\nimport service from './serviceAPI';\n\nconst galleryRef = document.querySelector('.gallery');\nconst searchFormRef = document.querySelector('.search-form');\nconst bthNextRenderRef = document.querySelector('.bth__loda-more');\n\n\n\n\n\nsearchFormRef.addEventListener('submit', handlerInput);\nbthNextRenderRef.addEventListener('click', loadMore);\ngalleryRef.addEventListener('click', basicLB)\n\nfunction basicLB(event) {\n  if (event.target.nodeName === \"IMG\") {\n    const currentURL = event.target.dataset.action;\n    basicLightbox.create(`\n    <img src=\"${currentURL}\"/>\n`, {\n      closable: true,\n    }).show()\n  }\n}\n\nfunction loadMore() {\n  service.getImages(onDataCome);\n  window.scrollTo({\n    top: window.pageYOffset + window.innerHeight,\n    left: 0,\n    behavior: 'smooth',\n  });\n}\n\nfunction handlerInput(event) {\n  event.preventDefault();\n  const input = searchFormRef.elements.query;\n  if (input.value === '') {\n    return;\n  }\n  service.searchQuery = input.value;\n  galleryRef.innerHTML = '';\n  service.resetPage();\n  service.getImages(onDataCome);\n  input.value = '';\n}\n\n\nfunction onDataCome(data) {\n  const nextToHTML = data\n    .map(el => {\n      const {\n        webformatURL,\n        likes,\n        views,\n        comments,\n        downloads,\n        largeImageURL\n      } = el;\n\n\n      return `<li>\n  <div class=\"photo-card\">\n  <img src=\"${webformatURL}\" data-action=\"${largeImageURL}\" alt=\"\" />\n  <div class=\"stats\">\n    <p class=\"stats-item\">\n      <i class=\"material-icons\">thumb_up</i>\n      ${likes}\n    </p>\n    <p class=\"stats-item\">\n      <i class=\"material-icons\">visibility</i>\n      ${views}\n    </p>\n    <p class=\"stats-item\">\n      <i class=\"material-icons\">comment</i>\n      ${comments}\n    </p>\n    <p class=\"stats-item\">\n      <i class=\"material-icons\">cloud_download</i>\n      ${downloads}\n    </p>\n  </div>\n</div>\n</li>`;\n    })\n    .join(' ');\n  galleryRef.insertAdjacentHTML('beforeend', nextToHTML);\n}\n"],"sourceRoot":""}